{
  "block.auxil.processor": "Processor",
  "block.auxil.programmer": "Programmer",
  "item.auxil.card": "Punch Card",
  "item.auxil.debug_goggles": "Debug Goggles",
  "item.auxil.deck": "Card Deck",

 "auxil.itemGroup.auxil": "Auxiliaries",

 "auxil.gui.programmer.full_message": "Can't Add Deck, Inventory is Full",

  "auxil.gui.scrollInput.defaultTitle" : "Instructions",
  "auxil.gui.scrollInput.scrollToSelect" : "Scroll To Select",

  "auxil.gui.programmer.description.noop.name": "No-Op Instruction",
  "auxil.gui.programmer.description.noop.description": "The No-Op instruction does nothing for one tick and is one byte in length.",
  "auxil.gui.programmer.description.add.name": "Add Instruction",
  "auxil.gui.programmer.description.add.description": "The Add instruction takes two numbers and replaces the first number with the sum of both. It is 5 bytes long.",
  "auxil.gui.programmer.description.subtract.name": "Subtract Instruction",
  "auxil.gui.programmer.description.subtract.description": "The Subtract instruction takes two numbers and replaces the first number with the difference of both. It is 5 bytes long.",
  "auxil.gui.programmer.description.multiply.name": "Multiply Instruction",
  "auxil.gui.programmer.description.multiply.description": "The Multiply instruction takes two numbers and replaces the first number with the product of both. It is 5 bytes long.",
  "auxil.gui.programmer.description.divide.name": "Divide Instruction",
  "auxil.gui.programmer.description.divide.description": "The Divide instruction takes two numbers and replaces the first number with the quotient of both. It is 5 bytes long.",
  "auxil.gui.programmer.description.and.name": "AND Instruction",
  "auxil.gui.programmer.description.and.description": "The And instruction ands two bytes together. It is 3 bytes long.",
  "auxil.gui.programmer.description.or.name": "OR Instruction",
  "auxil.gui.programmer.description.or.description": "The Or instruction ors two bytes together. It is 3 bytes long.",
  "auxil.gui.programmer.description.xor.name": "XOR Instruction",
  "auxil.gui.programmer.description.xor.description": "The XOR instruction xors two bytes together It is 4 bytes long.",
  "auxil.gui.programmer.description.bit_test.name": "Bit Test Instruction",
  "auxil.gui.programmer.description.bit_test.description": "The Bit Test instruction tests if a specific bit inside a byte is equal to 1. The byte is specified by the first operand, and the bit is specified by the second operand's value, being that many positions from the right. The result is stored in the CPU as the comparison bit.",
  "auxil.gui.programmer.description.branch_if.name": "Branch If Instruction",
  "auxil.gui.programmer.description.branch_if.description": "The Branch If instruction changes where in the program the CPU is executing instructions from. It will only branch if the comparison bit in the CPU is 1 (True)",
  "auxil.gui.programmer.description.jump.name": "Jump Instruction",
  "auxil.gui.programmer.description.jump.description": "The Jump instruction changes where in the program the CPU is executing instructions from.",
  "auxil.gui.programmer.description.call_subroutine.name": "Call Subroutine Instruction",
  "auxil.gui.programmer.description.call_subroutine.description": "The Call Subroutine instruction changes the instruction pointer while storing the position before the change.",
  "auxil.gui.programmer.description.return_subroutine.name": "Return Subroutine Instruction",
  "auxil.gui.programmer.description.return_subroutine.description": "The Return Subroutine instruction restores the instruction pointer by using the position stored by the Call Subroutine instruction.",
  "auxil.gui.programmer.description.bit_shift_left.name": "Bit Shift Left Instruction",
  "auxil.gui.programmer.description.bit_shift_left.description": "The Bit Shift Left instruction shifts the specified byte to the left. The byte is specified by the first operand, and the amount to be shifted is specified by the second operand. The first operand is replaced by the result.",
  "auxil.gui.programmer.description.bit_shift_right.name": "Bit Shift Right Instruction",
  "auxil.gui.programmer.description.bit_shift_right.description": "The Bit Shift Right instruction shifts the specified byte to the right. The byte is specified by the first operand, and the amount to be shifted is specified by the second operand. The first operand is replaced by the result.",
  "auxil.gui.programmer.description.load.name": "Load Instruction",
  "auxil.gui.programmer.description.load.description": "The Load instruction stores a byte into the CPU's memory.",
  "auxil.gui.programmer.description.store.name": "Store Instruction",
  "auxil.gui.programmer.description.store.description": "The Store instruction stores the contents of the CPU's memory into a register.",
  "auxil.gui.programmer.description.load_input.name": "Load Input Instruction",
  "auxil.gui.programmer.description.load_input.description": "The Load Input instruction stores a redstone signal from one of the CPU's inputs into the CPU's memory.",
  "auxil.gui.programmer.description.output.name": "Output Instruction",
  "auxil.gui.programmer.description.output.description": "The Output instruction outputs a redstone signal from one of the CPU's output lines. The signal is specified by the first operand, and the line is specified by the second.",
  "auxil.gui.programmer.description.equal_to.name": "Equal To Instruction",
  "auxil.gui.programmer.description.equal_to.description": "The Equal To instruction tests if a specified byte equals another. They are specified by operands one and two respectively. The result is stored in the CPU's comparison bit",
  "auxil.gui.programmer.description.not_equal_to.name": "Not Equal To Instruction",
  "auxil.gui.programmer.description.not_equal_to.description": "The Not Equal To instruction tests if a specified byte does not equals another. They are specified by operands one and two respectively. The result is stored in the CPU's comparison bit",
  "auxil.gui.programmer.description.greater_than.name": "Greater Than Instruction",
  "auxil.gui.programmer.description.greater_than.description": "The Greater Than Instruction",
  "auxil.gui.programmer.description.terminate.name": "Terminate Instruction",
  "auxil.gui.programmer.description.terminate.description": "The Terminate Instruction"
}